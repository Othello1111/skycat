# E.S.O. - VLT project/ESO Archive
# $Id: LocalCatalog.man3,v 1.1.1.1 2006/01/12 16:36:07 abrighto Exp $
#
# This file is processed by the ESO/VLT docDoManPages command to
# produce a man page in nroff, TeX and MIF formats. 
# See docDoManPages(1) for a description of the input format.
# 
# who             when       what
# --------------  ---------  ----------------------------------------
# Allan Brighton  27 Jun 96  Created
#

NAME
LocalCatalog - Class for accessing local catalogs stored as tab tables

SYNOPSIS
#include "LocalCatalog.h"

class LocalCatalog : public AstroCatalog {
...
public:
    LocalCatalog(const CatalogInfoEntry*);

    virtual int query(const AstroQuery& q, const char* filename, QueryResult& result);

    static int check_table(const char* file);

    virtual int sort(const char* column, int numeric = 1);

    virtual int uniq();
};

DESCRIPTION
This class can be used to search a local catalog stored as a file in
tab table format. The format of the table is something like:

 TableName

 # comment line 

 # catalog config information
 keyword: value ...


 A	B	C
 -	-	-
 0	1	3
 3	2	4
 ...

where the table name and catalog config info are optional. This is
the same format used by the "Starbase" package or utilities (see:
http://cfa-www.harvard.edu/~john/ for more about Starbase).

UNITS
Unless otherwise stated, the units for all radius values are in arcmin
or image pixels, depending on the catalog config entry settings. The
default is arcmin.  Floating point values for RA and DEC are always in
degrees. The default equinox is J2000, unless set otherwise in the
catalog config entry or in the table header.

PUBLIC METHODS

LocalCatalog(const CatalogInfoEntry*)
	Constructor - create local catalog class instance.  
	Note: public interface normally uses AstroCatalog::open() with
	the name of the file containing the local catalog.  The
	argument represents the entry in the catalog config file for
	this catalog (made automatially, if not already present).

query(const AstroQuery& q, const char* filename, QueryResult& result)
	Run a query on the catalog and return the number of objects
	found (redefined here to work with local catalogs, refer to
	the parent class AstroCatalog for details.).

check_table(const char* file)
	Check the validity of a tab table file and return 0 if it is ok.

SEE ALSO

AstroCatalog
----------------------------------------------------------------------
