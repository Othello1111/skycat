# E.S.O. - VLT project 
# $Id: configure.in,v 1.45 1998/07/28 21:23:23 abrighto Exp $
#
# This file is used with GNU autoconf to generate a configure script for
# the RTD modules.
#
# usage: % autoconf  # only if configure.in changed
#        % configure
#        % make
# who             when      what
# --------------  --------  ---------------------------------------------
# Allan Brighton  05/10/95  Created
# P.Biereichel    17/02/97  New Tcl/Tk/blt... versions. xgrabsc.2_41
#                           Shared lib
# Allan Brighton  08/04/97  Use tclConfig.sh and tkConfig.sh to get path
#                           and shared lib option info
# Allan Brighton  24/11/97  split rtd into rtd and tclutil packages, moved
#                           config.h and generic classes to tclutil pkg.
#                           Get config info from the tclutilConfig.sh now.
#
# -----------------------------------------------------------------------

AC_INIT(rtdimg/src/RtdImage.C)

# -----------------------------------------------------------------------
#
# Set the Rtd version from the VERSION file in this directory
# (That is the place to set the Rtd version number for a new release)
#
# -----------------------------------------------------------------------
RTD_VERSION=`cat VERSION | sed -e 's/rtd-//'`
AC_SUBST(RTD_VERSION)


# -----------------------------------------------------------------------
#
# 	Set prefix variable if one wasn't provided
#
# -----------------------------------------------------------------------
if test "$prefix" = "NONE" ; then
    #prefix=`(cd ..; pwd)`/install
    prefix=/usr/local
fi
echo "using prefix = $prefix"
AC_SUBST(prefix)

# -----------------------------------------------------------------------
#
# 	Set PWD variable (/bin/sh may inherit the wrong value...)
#
# -----------------------------------------------------------------------
PWD=`pwd`
SRC_ROOT=$PWD
AC_SUBST(SRC_ROOT)

# -----------------------------------------------------------------------
#
# C compiler and debugging flags
#
# -----------------------------------------------------------------------
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_CPP
AC_PROG_CXX
    
AC_ARG_WITH(gcc, [--with-gcc         use gcc compiler], CC=gcc; CXX=g++)
AC_ARG_WITH(cc,  [--with-cc          use cc compiler], CC=cc; CXX=CC)

# -----------------------------------------------------------------------
#
# Read the Tclutil config file to find out where the X and Tcl/Tk files and 
# libraries are and how to make shared libraries.
#
# -----------------------------------------------------------------------

# sh procedure to find a config file: arg: 
# $1 = name in lower case ("tclutil")

getConfig() {
  name=${1}Config.sh
  echo "checking for ${name}"
  TCL_CONFIG_DIR=""
  places="\
   ../tclutil \
   ../astrotcl \
   $prefix/lib \
   $prefix/lib/itcl \
   /vlt/dflow/lib/itcl \
   /vlt/dflow/lib \
   /usr/local/lib/itcl \
   /usr/local/lib"
  for dir in $places; do
    if test -r $dir/${name} ; then
      TCL_CONFIG_DIR=$dir
      break
    fi
  done
  while test -z "$TCL_CONFIG_DIR" ; do
    echo "What directory contains ${name} ?"
    read TCL_CONFIG_DIR
    if test ! -r $TCL_CONFIG_DIR/${name} ; then
      echo "can't read $TCL_CONFIG_DIR/${name}"
      TCL_CONFIG_DIR=""
    fi
  done
    
  # source the Tcl config file
  . $TCL_CONFIG_DIR/${name}
}

# source the config files
getConfig tclutil
getConfig astrotcl

# for now, just use the compiler settings used to build rtd
CC=$TCLUTIL_CC
CXX=$TCLUTIL_CXX
AC_SUBST(CC)
AC_SUBST(CXX)

# pass on Tcl/Tk version info
TCL_VERSION=$TCLUTIL_TCL_VERSION
TK_VERSION=$TCLUTIL_TK_VERSION
ITCL_VERSION=$TCLUTIL_ITCL_VERSION
ITK_VERSION=$TCLUTIL_ITK_VERSION
TCLX_VERSION=$TCLUTIL_TCLX_VERSION
BLT_VERSION=$TCLUTIL_BLT_VERSION

AC_SUBST(TCL_VERSION)
AC_SUBST(TK_VERSION)
AC_SUBST(ITCL_VERSION)
AC_SUBST(ITK_VERSION)
AC_SUBST(TCLX_VERSION)
AC_SUBST(BLT_VERSION)

AC_SUBST(TCLUTIL_VERSION)
AC_SUBST(ASTROTCL_VERSION)

# source dirs
if test ! -d "$TCLUTIL_SRC_ROOT" -o ! -d "$ASTROTCL_SRC_ROOT"; then
    echo "*** Error: This package requires source access to the tclutil and astrotcl packages."
    echo "*** Please configure and make those packages first."
    exit 1
fi
AC_SUBST(TCLUTIL_SRC_ROOT)
AC_SUBST(ASTROTCL_SRC_ROOT)

# subdirs
AC_SUBST(TCLUTIL_SUBDIRS)
AC_SUBST(TCLUTIL_SUBDIRS_NOTIX)
AC_SUBST(ASTROTCL_SUBDIRS)

# The environment variable TCLTK_ROOT may be set before running configure
# to help locate the correct Tcl/Tk installation
TCLTK_ROOT=$TCLUTIL_TCLTK_ROOT
AC_SUBST(TCLTK_ROOT)

# pass these valaues on from the Tclutil package
LD_VARNAME=$TCLUTIL_LD_VARNAME
AC_SUBST(LD_VARNAME)

LIB_RUNTIME_DIR=$TCLUTIL_LIB_RUNTIME_DIR
AC_SUBST(LIB_RUNTIME_DIR)

# get -D defines
DEFS=$TCLUTIL_DEFS
AC_SUBST(DEFS)

# -----------------------------------------------------------------------
#
# The "--with-notcl" option can be used to build a version of this package
# without Tcl access (i.e.: only the C and C++ libraries that do not access
# anything Tcl related).
#
# -----------------------------------------------------------------------

NO_TCL=0
AC_ARG_WITH(notcl, [--with-notcl         Build a version with no Tcl access], NO_TCL=1)
AC_SUBST(NO_TCL)

# The list of source dirs depends on whether we have Tcl access or not
if test "$NO_TCL" = "1" ; then
    echo "Compiling with no Tcl access."
    RTD_SUBDIRS="$SRC_ROOT/rtdevt \
                 $SRC_ROOT/rtilib \
		 $SRC_ROOT/rtdrmt"
else
    if test "$TCLUTIL_NO_TCL" = "1"; then
         echo "*** Error: Please configure tclutil first without the --with-notcl option"
	 exit 1
    fi
    if test "$ASTROTCL_NO_TCL" = "1"; then
         echo "*** Error: Please configure astrotcl first without the --with-notcl option"
	 exit 1
    fi

    RTD_SUBDIRS="$SRC_ROOT/rtdevt \
                 $SRC_ROOT/rtilib \
		 $SRC_ROOT/rtdrmt \
                 $SRC_ROOT/rtdimg"
fi
AC_SUBST(RTD_SUBDIRS)

# -----------------------------------------------------------------------
#
# "makedepend" info
#
# normally, "makedepend" wants to know all of the path names and will
# cause make errors if the include path to the C++ includes is not given.
# Here we try to extract that information from the C++ preprocessor output.
# The syntax of the output is different for different compilers...
#
# -----------------------------------------------------------------------
CXX_INCLUDE=$TCLUTIL_CXX_INCLUDE
AC_SUBST(CXX_INCLUDE)
AC_SUBST(CXX_DEPEND_FLAGS)

# -----------------------------------------------------------------------
#
# set OS version string
#
# -----------------------------------------------------------------------
OSVERSION="`uname -s`-`uname -r`"
AC_SUBST(OSVERSION)

# -----------------------------------------------------------------------
#
# if we are using gcc, we can get better make dependencies using gcc -MM 
# otherwise we have to use  "makedepend", which sometimes gets confused. 
# This sets the make target to use:
#
# -----------------------------------------------------------------------
DEPEND_TARGET=$TCLUTIL_DEPEND_TARGET
AC_SUBST(DEPEND_TARGET)

# -----------------------------------------------------------------------
#
# use CDEBUGFLAGS for C and CXXDEBUGFLAGS for C++ compiler options
#
# -----------------------------------------------------------------------
if test "$CC" = "gcc" ; then
	CDEBUGFLAGS="-g -O"
fi
if test "$CXX" = "g++" ; then
	CXXDEBUGFLAGS="-g -O"
fi
AC_ARG_WITH(debug, [--with-debug       use debugging flag], 
	CDEBUGFLAGS="-g"; CXXDEBUGFLAGS="-g", 
	CDEBUGFLAGS="-O"; CXXDEBUGFLAGS="-O")

AC_SUBST(CDEBUGFLAGS)
AC_SUBST(CXXDEBUGFLAGS)

# -----------------------------------------------------------------------
#
# Check if we are using (and creating) shared libraries 
# If so, we use the information from tclConfig.sh to determine the compiler
# options. 
#
# -----------------------------------------------------------------------
AC_ARG_ENABLE(shared, [--enable-shared    build and use shared libraries],
	SHARED=1,
	SHARED=0)
AC_SUBST(SHARED)

if test $SHARED -eq 0 ; then
	echo "Don't build shared libraries"
else
	echo "Will build shared libraries"
fi

# Flags to pass to cc when compiling the components of a shared library:
SHLIB_CFLAGS=$TCLUTIL_SHLIB_CFLAGS

# Base command to use for combining object files into a shared library:
SHLIB_LD=$TCLUTIL_SHLIB_LD

# Suffix to use for the name of a shared library.
SHLIB_SUFFIX=$TCLUTIL_SHLIB_SUFFIX

# Either '$LIBS' (if dependent libraries should be included when linking
# shared libraries) or an empty string.  See Tcl's configure.in for more
# explanation.
SHLIB_LD_LIBS=$TCLUTIL_SHLIB_LD_LIBS

# Library file(s) to include in tclsh and other base applications
# in order to provide facilities needed by DLOBJ above.
DL_LIBS=$TCLUTIL_DL_LIBS

# Flags to pass to the compiler when linking object files into
# an executable tclsh or tcltest binary.
LD_FLAGS=$TCLUTIL_LD_FLAGS

# Flags to pass to cc, such as "-Wl,-R,/usr/local/tcl/lib", that tell the
# run-time dynamic linker where to look for shared libraries such as
# libtcl.so.  Used when linking applications.  Only works if there
# is a variable "LIB_RUNTIME_DIR" defined in the Makefile.
LD_SEARCH_FLAGS=$TCLUTIL_LD_SEARCH_FLAGS

AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(DL_LIBS)
AC_SUBST(LD_FLAGS)
AC_SUBST(LD_SEARCH_FLAGS)

# -----------------------------------------------------------------------
# Check the location of X libraries and includes.
# -----------------------------------------------------------------------

# -I switch(es) to use to make all of the X11 include files accessible:
XINCSW=$TCLUTIL_XINCSW

# Linker switch(es) to use to link with the X11 library archive.
XLIBSW=$TCLUTIL_XLIBSW

# dir for X libs
XLIBDIR=$TCLUTIL_XLIBDIR

AC_SUBST(XINCSW)
AC_SUBST(XLIBSW)
AC_SUBST(XLIBDIR)

# -----------------------------------------------------------------------
#
# Get the Tcl/Tk information from the tclutilConfig.sh file
#
# -----------------------------------------------------------------------

# get the -L and -l library flags

TCL_LIB_SPEC=$TCLUTIL_TCL_LIB_SPEC
TK_LIB_SPEC=$TCLUTIL_TK_LIB_SPEC
TCLX_LIB_SPEC=$TCLUTIL_TCLX_LIB_SPEC
ITCL_LIB_SPEC=$TCLUTIL_ITCL_LIB_SPEC
ITK_LIB_SPEC=$TCLUTIL_ITK_LIB_SPEC
BLT_LIB_SPEC=$TCLUTIL_BLT_LIB_SPEC

AC_SUBST(TCL_LIB_SPEC)
AC_SUBST(TK_LIB_SPEC)
AC_SUBST(TCLX_LIB_SPEC)
AC_SUBST(ITCL_LIB_SPEC)
AC_SUBST(ITK_LIB_SPEC)
AC_SUBST(BLT_LIB_SPEC)

# -----------------------------------------------------------------------
# get the -I include flags
# -----------------------------------------------------------------------
TCLINCSW=$TCLUTIL_TCLINCSW
TKINCSW=$TCLUTIL_TKINCSW

AC_SUBST(TCLINCSW)
AC_SUBST(TKINCSW)

# -----------------------------------------------------------------------
# tcl package library files
# -----------------------------------------------------------------------
TCL_LIBRARY=$TCLUTIL_TCL_LIBRARY
AC_SUBST(TCL_LIBRARY)

TK_LIBRARY=$TCLUTIL_TK_LIBRARY
AC_SUBST(TK_LIBRARY)

BLT_LIBRARY=$TCLUTIL_BLT_LIBRARY
AC_SUBST(BLT_LIBRARY)

AC_SUBST(TCLUTIL_LIBRARY)
AC_SUBST(ASTROTCL_LIBRARY)

# -----------------------------------------------------------------------
#       system libs
# -----------------------------------------------------------------------
LIBS=$TCLUTIL_LIBS $TCL_LIBS
AC_SUBST(LIBS)

# -----------------------------------------------------------------------
# Check if we are using the installed TCLUTIL library and include files
# or local development versions
# -----------------------------------------------------------------------
if test -d $TCLUTIL_SRC_ROOT; then
	TCLUTIL_LIB=$TCLUTIL_BUILD_LIB_SPEC
	TCLUTIL_LIB_STATIC=$TCLUTIL_BUILD_LIB_SPEC_STATIC
	TCLUTIL_BUILD_LIBRARY=$TCLUTIL_BUILD_LIBRARY
else
	TCLUTIL_LIB=$TCLUTIL_LIB_SPEC
	TCLUTIL_LIB_STATIC=$TCLUTIL_LIB_SPEC_STATIC
	TCLUTIL_BUILD_LIBRARY=$TCLUTIL_LIBRARY
fi
AC_SUBST(TCLUTIL_SRC_ROOT)
AC_SUBST(TCLUTIL_LIB)
AC_SUBST(TCLUTIL_LIB_SPEC)
AC_SUBST(TCLUTIL_LIB_STATIC)
AC_SUBST(TCLUTIL_BUILD_LIBRARY)
AC_SUBST(TCLUTIL_BUILD_INCLUDES)

# -----------------------------------------------------------------------
# Check if we are using the installed ASTROTCL library and include files
# or local development versions
# -----------------------------------------------------------------------
if test -d $ASTROTCL_SRC_ROOT; then
	ASTROTCL_LIB=$ASTROTCL_BUILD_LIB_SPEC
	ASTROTCL_LIB_STATIC=$ASTROTCL_BUILD_LIB_SPEC_STATIC
	ASTROTCL_BUILD_LIBRARY=$ASTROTCL_BUILD_LIBRARY
else
	ASTROTCL_LIB=$ASTROTCL_LIB_SPEC
	ASTROTCL_LIB_STATIC=$ASTROTCL_LIB_SPEC_STATIC
	ASTROTCL_BUILD_LIBRARY=$ASTROTCL_LIBRARY
fi
AC_SUBST(ASTROTCL_SRC_ROOT)
AC_SUBST(ASTROTCL_LIB)
AC_SUBST(ASTROTCL_LIB_SPEC)
AC_SUBST(ASTROTCL_LIB_STATIC)
AC_SUBST(ASTROTCL_BUILD_LIBRARY)
AC_SUBST(ASTROTCL_BUILD_INCLUDES)

#--------------------------------------------------------------------
# Propagate prefix argument as installation directory.
#--------------------------------------------------------------------
DESTDIR="$prefix"
BINDIR="$DESTDIR/bin"
LIBDIR="$DESTDIR/lib"
INCDIR="$DESTDIR/include/rtd"
MANDIR="$DESTDIR/man"
RTD_DIR=$LIBDIR/rtd
RTD_LIBRARY=$RTD_DIR
RTD_BUILD_LIBRARY=$SRC_ROOT/rtdimg/library
RTD_BUILD_INCLUDES="-I$SRC_ROOT/rtdimg/include -I$SRC_ROOT/rtilib/include -I$SRC_ROOT/rtdevt/include"

AC_SUBST(DESTDIR)
AC_SUBST(BINDIR)
AC_SUBST(LIBDIR)
AC_SUBST(INCDIR)
AC_SUBST(MANDIR)
AC_SUBST(RTD_DIR)
AC_SUBST(RTD_LIBRARY)
AC_SUBST(RTD_BUILD_LIBRARY)
AC_SUBST(RTD_BUILD_INCLUDES)

#--------------------------------------------------------------------
#	Set name of library to link
#--------------------------------------------------------------------

# String to pass to linker to pick up the Rtd library from its
# build directory.
RTD_BUILD_LIB_SPEC="-L$SRC_ROOT -lrtd"

# static version of above
RTD_BUILD_LIB_SPEC_STATIC="$SRC_ROOT/librtd.a"

# String to pass to linker to pick up the Rtd library from its
# installed directory.
RTD_LIB_SPEC="-L$LIBDIR -lrtd"

# static version of above
RTD_LIB_SPEC_STATIC="$LIBDIR/librtd.a"

# if we are not building shared libraries, make sure we use the static
# libraries and not get an outdated shared library by accident
if test "$SHARED" = "0"
then
    RTD_BUILD_LIB_SPEC=$RTD_BUILD_LIB_SPEC_STATIC
    RTD_LIB_SPEC=$RTD_LIB_SPEC_STATIC
fi

AC_SUBST(RTD_BUILD_LIB_SPEC)
AC_SUBST(RTD_BUILD_LIB_SPEC_STATIC)
AC_SUBST(RTD_LIB_SPEC)
AC_SUBST(RTD_LIB_SPEC_STATIC)

#--------------------------------------------------------------------
#	Print out some of the more important settings 
#--------------------------------------------------------------------
echo "
Configuration results (edit and run ./config.status to modify):

C   Compiler                      => $CC
C++ Compiler                      => $CXX
C++ include flag                  => $CXX_INCLUDE"

if test "$NO_TCL" = "0" ; then
echo "
X include files                   => $XINCSW
Tcl include files                 => $TCLINCSW
Tk include files                  => $TKINCSW

X libs                            => $XLIBSW
Tcl libs                          => $TCL_LIB_SPEC
Tk libs                           => $TK_LIB_SPEC
TclX libs                         => $TCLX_LIB_SPEC
Itcl libs                         => $ITCL_LIB_SPEC
Itk libs                          => $ITK_LIB_SPEC
BLT libs                          => $BLT_LIB_SPEC
TCLUTIL libs                      => $TCLUTIL_LIB_SPEC
ASTROTCL libs                     => $ASTROTCL_LIB_SPEC

directory containing tcl library  => $TCL_LIBRARY
directory containing tk  library  => $TK_LIBRARY
directory containing blt library  => $BLT_LIBRARY

install rtd tcl library files in  => $RTD_DIR"
fi

echo "
install rtd binaries in           => $BINDIR
install rtd libraries in          => $LIBDIR
install rtd include files in      => $INCDIR"

#--------------------------------------------------------------------
#	Generate the Makefiles etc...
#--------------------------------------------------------------------
AC_OUTPUT(\
	Makefile \
        rtdConfig.sh \
        \
	rtdimg/Makefile \
	rtdimg/src/Makefile \
	rtdimg/include/Makefile \
	rtdimg/man/Makefile \
	rtdimg/library/Makefile \
	rtdimg/library/rtd_version.tcl \
	rtdimg/library/pkgIndex.tcl \
	rtdimg/demos/Makefile \
	rtdimg/demos/rtd.sh \
	rtdimg/demos/rtd_env.sh \
	rtdimg/images/Makefile \
	rtdimg/bitmaps/Makefile \
	rtdimg/colormaps/Makefile \
	rtdimg/test/Makefile \
	\
	rtilib/Makefile \
	rtilib/src/Makefile \
	rtilib/include/Makefile \
	rtilib/test/Makefile \
	rtilib/man/Makefile \
	\
	rtdevt/Makefile \
	rtdevt/src/Makefile \
	rtdevt/include/Makefile \
	rtdevt/man/Makefile \
	\
	rtdrmt/Makefile \
	rtdrmt/src/Makefile \
	rtdrmt/include/Makefile \
	rtdrmt/test/Makefile \
	rtdrmt/man/Makefile \
	\
	, chmod +x rtdimg/demos/rtd.sh; sh makelinks; make -k depend \
)

